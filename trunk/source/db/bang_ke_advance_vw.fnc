CREATE FUNCTION [dbo].[BANG_KE_ADVANCE](@pAccountNumber numeric, @pStart date, @pEnd date)
RETURNS @worktable TABLE
(
    STT bigint primary key NOT NULL,
	TEN_NHAN_VIEN nvarchar(100),
	USER_NAME varchar(50),
	GIOI_TINH nvarchar(1),
	SO_CMND varchar(15),
	NGAY_CAP date,
	DIA_CHI nvarchar(500),
	SO_TAI_KHOAN varchar(50),
	CHI_NHANH_NH nvarchar(100),
	SO_DIEN_THOAI varchar(15),
	NGAY_DANG_KY date,
	HE_THONG numeric(10,3),
	QUAN_LY numeric(10,3),
	THUONG_THEM numeric(10,3),
	TONG numeric(10,3),
	THANG nvarchar(6)
)
AS
begin
	--if (@pAccountNumber != null and @pAccountNumber !=-1)
	
	with bonus as (
		SELECT     SUM(BONUS_AMOUNT) AS TONG, 
		SUM(
		CASE BONUS_TYPE
		WHEN 'TT' THEN BONUS_AMOUNT
		WHEN 'CC' THEN BONUS_AMOUNT
		WHEN 'HT' THEN BONUS_AMOUNT
		ELSE 0
		END) AS HE_THONG,
		SUM(
		CASE BONUS_TYPE
		WHEN 'QL1' THEN BONUS_AMOUNT
		WHEN 'CC1' THEN BONUS_AMOUNT
		WHEN 'QL2' THEN BONUS_AMOUNT
		WHEN 'CC2' THEN BONUS_AMOUNT
		WHEN 'QL3' THEN BONUS_AMOUNT
		WHEN 'CC3' THEN BONUS_AMOUNT
		WHEN 'QL4' THEN BONUS_AMOUNT
		WHEN 'CC4' THEN BONUS_AMOUNT
		WHEN 'QL5' THEN BONUS_AMOUNT
		WHEN 'CC5' THEN BONUS_AMOUNT
		WHEN 'QL6' THEN BONUS_AMOUNT
		WHEN 'CC6' THEN BONUS_AMOUNT
		ELSE 0
		END) AS QUAN_LY,
		SUM(
		CASE BONUS_TYPE
		WHEN 'ADD' THEN BONUS_AMOUNT
		ELSE 0
		END) AS THUONG_THEM,
		MONTH , ACCOUNT_ID
		FROM         dbo.ACCOUNT_BONUS
		GROUP BY MONTH, ACCOUNT_ID)
	insert @worktable
	select ROW_NUMBER() OVER (ORDER BY ab.TONG desc) AS STT, child.HO_TEN AS TEN_NHAN_VIEN, usr.USER_NAME, child.GIOI_TINH, child.SO_CMND, 
	child.NGAY_CAP, child.DIA_CHI, child.SO_TAI_KHOAN, child.CHI_NHANH_NH, child.SO_DIEN_THOAI, child.CREATED_DATE AS NGAY_DANG_KY,
	ab.HE_THONG, ab.QUAN_LY, ab.THUONG_THEM, ab.TONG, ab.MONTH as THANG
	FROM bonus AS ab INNER JOIN
		dbo.ACCOUNT AS ca ON ab.ACCOUNT_ID = ca.ACCOUNT_ID INNER JOIN
		dbo.MEMBER_INFO AS child ON ca.MEMBER_ID = child.MEMBER_ID INNER JOIN
		dbo.USERS AS usr ON ca.USER_ID = usr.USER_ID;
    RETURN;
end